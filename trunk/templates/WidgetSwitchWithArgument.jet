<%@ jet
    package="kr.or.eclipse.swt.query.internal.gen"
    class="WidgetSwitchWithArgumentGenerator" 
    imports="java.util.* org.eclipse.swt.widgets.Widget"
    %>
<% 
@SuppressWarnings("unchecked")
List<Class<?>> types = (List<Class<?>>)argument; 
%>
package kr.or.eclipse.swt.query.util;

/*
 * generated by SWT Query SDK at <%=Calendar.getInstance().getTime() %>
 */ 
<% for(Class<?> each : types) { %>
import <%=each.getCanonicalName() %>;
<% } %>

public class WidgetSwitchWithArgument<T, A> {
<% for(Class<?> each : types) { %>
<%
String eachTypeName = each.getSimpleName();
StringBuffer buffer = new StringBuffer(eachTypeName);
buffer.setCharAt(0, Character.toLowerCase(eachTypeName.charAt(0)));
String varName = buffer.toString();
%>
    /**
     * do switching for <%=eachTypeName%>.
     * @param <%=varName%> <%=eachTypeName%> to switch.
     * @param arg Argument object.
     * @return switching result.
     */
	public T case<%=eachTypeName%>(<%=eachTypeName%> <%=varName %>, A arg){
<% if(each != Widget.class) {%>		
		return case<%=each.getSuperclass().getSimpleName() %>(<%=varName%>, arg);
<%}%>
<% else { %>		
		return null;
<%}%>
	}
<% } %>
	public T doSwitch(Widget widget, A arg) {
<% 
int size = types.size();
for(int i=0; i< size; i++) { 
Class<?> each = types.get(i);
%>
		<%=(i > 0)? "else " :""%><%=(i < size -1 )? "if(widget instanceof " + each.getSimpleName() +")" :""%>{
			return case<%=each.getSimpleName()%>((<%=each.getSimpleName()%>)widget, arg);
		}
<% } %>
    }
}
    