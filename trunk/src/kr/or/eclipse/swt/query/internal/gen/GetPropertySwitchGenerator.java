package kr.or.eclipse.swt.query.internal.gen;

import kr.or.eclipse.swt.query.internal.gen.Property;
import org.eclipse.swt.widgets.Widget;
import kr.or.eclipse.swt.query.util.WidgetSwitch;

public class GetPropertySwitchGenerator
{
  protected static String nl;
  public static synchronized GetPropertySwitchGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    GetPropertySwitchGenerator result = new GetPropertySwitchGenerator();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/*" + NL + " * Copyright 2011 jeeeyul@gmail.com" + NL + " *" + NL + " * All rights reserved. This program and the accompanying materials" + NL + " * are made available under the terms of the Eclipse Public License v1.0" + NL + " * which accompanies this distribution, and is available at" + NL + " * http://www.eclipse.org/legal/epl-v10.html" + NL + " *" + NL + " */" + NL + "" + NL + "package kr.or.eclipse.swt.query.util.internal;" + NL;
  protected final String TEXT_2 = NL;
  protected final String TEXT_3 = NL;
  protected final String TEXT_4 = NL + "/*" + NL + " * This file was generated by SWT Query SDK." + NL + " * So you should not modify it manually." + NL + " * If you want to customize this code, contact below:" + NL + " *" + NL + " * http://code.google.com/p/swtquery/" + NL + " */" + NL + "public class Get";
  protected final String TEXT_5 = "Switch extends WidgetSwitch<";
  protected final String TEXT_6 = "> {" + NL + "\tpublic ";
  protected final String TEXT_7 = " getProperty(Widget widget){" + NL + "\t\treturn doSwitch(widget);" + NL + "\t}" + NL;
  protected final String TEXT_8 = NL + "\tpublic ";
  protected final String TEXT_9 = " case";
  protected final String TEXT_10 = "(";
  protected final String TEXT_11 = " widget){" + NL + "\t\treturn widget.get";
  protected final String TEXT_12 = "();" + NL + "\t}";
  protected final String TEXT_13 = NL + "}";
  protected final String TEXT_14 = NL + "    ";

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
     Property property = (Property)argument; 
    stringBuffer.append(TEXT_1);
     GenUtil.startImport(); 
     GenUtil.addImportStatement(property.propertyType);
     GenUtil.addImportStatement(Widget.class);
     GenUtil.addImportStatement(WidgetSwitch.class);
     for(Class<?> each : property.types) { 
     GenUtil.addImportStatement(each);
     } 
    stringBuffer.append(TEXT_2);
    stringBuffer.append(GenUtil.endImport() );
    stringBuffer.append(TEXT_3);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(property.propertyName );
    stringBuffer.append(TEXT_5);
    stringBuffer.append(property.propertyType.getSimpleName());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(property.propertyType.getSimpleName() );
    stringBuffer.append(TEXT_7);
     for(Class<?> each : property.types) { 
    stringBuffer.append(TEXT_8);
    stringBuffer.append(property.propertyType.getSimpleName());
    stringBuffer.append(TEXT_9);
    stringBuffer.append(each.getSimpleName());
    stringBuffer.append(TEXT_10);
    stringBuffer.append(each.getSimpleName());
    stringBuffer.append(TEXT_11);
    stringBuffer.append(property.propertyName);
    stringBuffer.append(TEXT_12);
     } 
    stringBuffer.append(TEXT_13);
    stringBuffer.append(TEXT_14);
    return stringBuffer.toString();
  }
}
