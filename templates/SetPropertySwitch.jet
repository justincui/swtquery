<%@ jet
    package="kr.or.eclipse.swt.query.internal.gen"
    class="SetPropertySwitchGenerator" 
    imports="kr.or.eclipse.swt.query.internal.gen.Property org.eclipse.swt.widgets.Widget kr.or.eclipse.swt.query.util.WidgetSwitchWithArgument"
    %>
<% 
Property property = (Property)argument; 
%>
<%@ include file="copyright.txt" %>

package kr.or.eclipse.swt.query.util.internal;

<% GenUtil.startImport(); %>
<% GenUtil.addImportStatement(property.propertyType);%>
<% GenUtil.addImportStatement(Widget.class);%>
<% GenUtil.addImportStatement(WidgetSwitchWithArgument.class);%>
<% for(Class<?> each : property.settableTypes) { %>
<% GenUtil.addImportStatement(each);%>
<% } %>
<%=GenUtil.endImport() %>

<%@ include file="generation-header.txt" %>
public class Set<%=property.propertyName %>Switch extends WidgetSwitchWithArgument<Object, <%=property.propertyType.getSimpleName()%>> {
	public void setProperty(Widget widget, <%=property.propertyType.getSimpleName()%> value){
		doSwitch(widget, value);
	}

<% for(Class<?> each : property.settableTypes) { %>
	public Object case<%=each.getSimpleName()%>(<%=each.getSimpleName()%> widget, <%=property.propertyType.getSimpleName()%> value){
		widget.set<%=property.propertyName%>(value);
		return null;
	}
<% } %>
}
    