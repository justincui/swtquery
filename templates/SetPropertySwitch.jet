<%@ jet
    package="kr.or.eclipse.swt.query.internal.gen"
    class="SetPropertySwitchGenerator" 
    imports="java.util.* kr.or.eclipse.swt.query.internal.gen.Property org.eclipse.swt.widgets.Widget kr.or.eclipse.swt.query.util.WidgetSwitchWithArgument"
    %>
<% 
Property property = (Property)argument; 
%>
package kr.or.eclipse.swt.query.util.internal;

<% GenUtil.startImport(); %>
<%=GenUtil.getImportStatement(property.propertyType)%>
<%=GenUtil.getImportStatement(Widget.class)%>
<%=GenUtil.getImportStatement(WidgetSwitchWithArgument.class)%>
<% for(Class<?> each : property.types) { %>
<%=GenUtil.getImportStatement(each)%>
<% } %>
<% GenUtil.endImport(); %>
/*
 * generated by SWT Query SDK at <%=Calendar.getInstance().getTime() %>
 */ 
public class Set<%=property.propertyName %>Switch extends WidgetSwitchWithArgument<Object, <%=property.propertyType.getSimpleName()%>> {
	public void setProperty(Widget widget, <%=property.propertyType.getSimpleName()%> value){
		doSwitch(widget, value);
	}

<% for(Class<?> each : property.types) { %>
	public Object case<%=each.getSimpleName()%>(<%=each.getSimpleName()%> widget, <%=property.propertyType.getSimpleName()%> value){
		widget.set<%=property.propertyName%>(value);
		return null;
	}
<% } %>
}
    