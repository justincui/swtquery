<%@ jet
    package="kr.or.eclipse.swt.query.internal.generators"
    class="PropertySwitchGenerator" 
    imports="java.util.* kr.or.eclipse.swt.query.internal.generators.Property"
    %>
<% 
@SuppressWarnings("unchecked")
Map<String, Property> properties = (Map<String, Property>)argument; 
%>
<%@ include file="copyright.txt" %>

package kr.or.eclipse.swt.query.util;

<% GenUtil.startImport(); %>
import java.util.*;
import org.eclipse.swt.widgets.Widget;
import kr.or.eclipse.swt.query.util.internal.*;
<% for(Property each : properties.values()){ %>
<% GenUtil.addImportStatement(each.propertyType);%>
<%}%>
<%= GenUtil.endImport() %>

<%@ include file="generation-header.txt" %>
public class WidgetPropertySwitch{
	private static final Map<String, PropertyEntry> map = new HashMap<String, PropertyEntry>();
	
	private static class PropertyEntry{
		public Class<?> type;
		
		public PropertyEntry(Class<?> type){
			this.type = type;
		}
	}
	
	static{
<%for(Property each : properties.values()){ %>
		map.put("<%=each.propertyName.trim().toLowerCase()%>", new PropertyEntry(<%=each.propertyType.getSimpleName()%>.class));
<%}%>	
	}

<% for(String eachKey : properties.keySet()){ 
	Property each = properties.get(eachKey);  
	if(each.gettableTypes.size()>0){ %>
	private static final Get<%=eachKey%>Switch get<%=eachKey%>Switch = new Get<%=eachKey%>Switch();
<% 
	}
	if(each.settableTypes.size()>0){ %>
	private static final Set<%=eachKey%>Switch set<%=eachKey%>Switch = new Set<%=eachKey%>Switch();
<% 
	} 
} 
%>
	@SuppressWarnings("unchecked")
	public static <T> T getProperty(Widget widget, String propertyName){
<% boolean isFirst = true;
for(Property each : properties.values()){ %>
		<%= isFirst ? "if" : "else if" %> (propertyName.equalsIgnoreCase("<%=each.propertyName%>")){
			return (T) get<%=each.propertyName%>Switch.getProperty(widget);
		}
		<% isFirst = false; %>
<%}%>	
		return null;
	}
	
	public static void setProperty(Widget widget, String propertyName, Object value){
<% isFirst = true;
for(Property each : properties.values()){ 
if(each.settableTypes.size() == 0){
	continue;
}
%>
		<%= isFirst ? "if" : "else if" %> (propertyName.equalsIgnoreCase("<%=each.propertyName%>")){
			set<%=each.propertyName%>Switch.setProperty(widget, (<%=each.propertyType.getSimpleName() %>)value);
		}
		<% isFirst = false; %>
<%}%>	
	}
<% for(Property each : properties.values()){%>
<% if(each.gettableTypes.size() > 0) {%>
	public static <%=each.propertyType.getSimpleName()%> get<%=each.propertyName%>(Widget widget){
		return get<%=each.propertyName%>Switch.getProperty(widget);
	}
<% } %>
<% if(each.settableTypes.size() > 0) { %>
	public static void set<%=each.propertyName%>(Widget widget, <%=each.propertyType.getSimpleName()%> value){
		set<%=each.propertyName%>Switch.setProperty(widget, value);
	}
<% } %>
<% } %>	

	public static Class<?>getPropertyType(String propertyName){
		PropertyEntry entry = map.get(propertyName.trim().toLowerCase());
		if(entry == null){
			return null;
		}
		else{
			return entry.type;
		}	
	}

		
}
