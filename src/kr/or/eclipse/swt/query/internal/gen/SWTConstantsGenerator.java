package kr.or.eclipse.swt.query.internal.gen;

import org.eclipse.swt.SWT;
import java.lang.reflect.Field;

public class SWTConstantsGenerator
{
  protected static String nl;
  public static synchronized SWTConstantsGenerator create(String lineSeparator)
  {
    nl = lineSeparator;
    SWTConstantsGenerator result = new SWTConstantsGenerator();
    nl = null;
    return result;
  }

  public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "";
  protected final String TEXT_2 = "/*" + NL + " * Copyright 2011 jeeeyul@gmail.com" + NL + " *" + NL + " * All rights reserved. This program and the accompanying materials" + NL + " * are made available under the terms of the Eclipse Public License v1.0" + NL + " * which accompanies this distribution, and is available at" + NL + " * http://www.eclipse.org/legal/epl-v10.html" + NL + " *" + NL + " */" + NL + "" + NL + "package kr.or.eclipse.swt.query.util;" + NL + "" + NL + "import java.util.*;" + NL;
  protected final String TEXT_3 = NL;
  protected final String TEXT_4 = "/*" + NL + " * This file was generated by SWT Query SDK." + NL + " * So you should not modify it manually." + NL + " * If you want to customize this code, contact below:" + NL + " *" + NL + " * http://code.google.com/p/swtquery/" + NL + " */" + NL + "public class SWTConstants{" + NL + "\tprivate static Map<String, Integer> map = new HashMap<String, Integer>();" + NL + "\t" + NL + "\tstatic{";
  protected final String TEXT_5 = NL + "\t\tmap.put(\"";
  protected final String TEXT_6 = "\", ";
  protected final String TEXT_7 = ");";
  protected final String TEXT_8 = NL + "\t}" + NL + "}";

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
    stringBuffer.append(TEXT_1);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(TEXT_4);
     for(Field eachField : SWT.class.getFields()){
	if(eachField.getType() != int.class){
		continue;
	}
	
	String eachValue = "";
	
	try{
		eachValue = Integer.toString((Integer)eachField.get(SWT.class));
	}catch(Exception e){
		e.printStackTrace();
	}

    stringBuffer.append(TEXT_5);
    stringBuffer.append(eachField.getName().toLowerCase().replace("_", ""));
    stringBuffer.append(TEXT_6);
    stringBuffer.append(eachValue);
    stringBuffer.append(TEXT_7);
     } 
    stringBuffer.append(TEXT_8);
    return stringBuffer.toString();
  }
}
